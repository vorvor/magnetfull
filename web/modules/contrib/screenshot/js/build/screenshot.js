!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.CKEditor5=n():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.screenshot=n())}(self,(()=>(()=>{var __webpack_modules__={"./js/ckeditor5_plugins/screenshot/src/Screenshot.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Screenshot)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var _icons_screenshot_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../icons/screenshot.svg */ \"./icons/screenshot.svg\");\n\n\n\n\nclass Screenshot extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  init() {\n    const editor = this.editor;\n\n    const buttonFactory = function () {\n      const button = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ButtonView();\n\n      button.set(\n        {\n          label: 'Screenshot',\n          icon: _icons_screenshot_svg__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n          tooltip: true,\n        }\n      );\n      const schema = editor.model.schema;\n\n      schema.register('screenshot', {\n        // Behaves like a self-contained object (e.g. an image).\n        isObject: true,\n        // Allow in places where other blocks are allowed (e.g. directly in the root).\n        allowWhere: '$text',\n        isInline: true,\n        allowAttributes: ['class', 'id'],\n      });\n      const configConversion = {\n        model: {\n          name: 'screenshot',\n          attributes: [ 'id' ]\n        },\n        view: {\n          name: 'div',\n          classes: ['screenshot'],\n        },\n      };\n      editor.conversion.for('downcast').elementToElement(configConversion);\n      editor.conversion.for('upcast').elementToElement(configConversion);\n\n      const executeHandler = () => {\n        this.config = editor.config.get('screenshot');\n        this.config.id = (Math.random() + 1).toString(36).substring(7);\n        captureScreen(this.config);\n      }\n      button.on('execute', executeHandler);\n\n      return button;\n    };\n\n    const captureScreen = function(config) {\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getDisplayMedia) {\n        alert(Drupal.t('Your browser does not support screen capture. Please use the latest version of Chrome or Firefox.'));\n        return;\n      }\n\n      navigator.mediaDevices.getDisplayMedia({video: true})\n        .then(stream => {\n          // Delay the screen capture to give the sharing prompt time to disappear.\n          setTimeout(() => {\n            handleStream(stream, config);\n          }, 500); // Adjust delay as needed.\n        })\n        .catch(handleError);\n    }\n\n    const handleStream = function(stream, config) {\n      const track = stream.getVideoTracks()[0];\n      let imageCapture = new ImageCapture(track);\n      imageCapture.grabFrame().then((bitmap) => processFrame(bitmap, track, config)).catch(handleError);\n    }\n    const processFrame = function(bitmap, track, config) {\n      const canvas = document.createElement('canvas');\n      drawImageOnCanvas(bitmap, canvas);\n      const capture = document.createElement('img');\n      capture.id = 'captured-image';\n      capture.src = canvas.toDataURL();\n      capture.width = 2;\n      document.body.appendChild(capture);\n      let markerArea = new markerjs2.MarkerArea(capture);\n      markerArea.settings.displayMode = 'popup';\n      markerArea.addEventListener( \"render\", event => {\n        capture.src = event.dataUrl;\n      });\n      markerArea.show();\n      markerArea.addEventListener(\"close\", (event) => {\n        const base64Image = capture.src;\n        capture.remove();\n        config.screenshot = base64Image;\n        if (config.url != undefined && base64Image != '') {\n          fetch(config.url, {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(config)\n          })\n            .then(response => response.json())\n            .then(data => {\n              if (data.url) {\n                const currentDate = new Date();\n                const year = currentDate.getFullYear();\n                const month = currentDate.getMonth() + 1;\n                const day = currentDate.getDate();\n                const hours = currentDate.getHours();\n                const minutes = currentDate.getMinutes();\n\n                let img = `<a href=\"${data.url}\" class=\"screenshot-popup\" title=\"Screenshot\"><img src=\"${data.url}\" alt=\"Screenshot ${day}/${month}/${year} - ${hours}:${minutes}\" data-align=\"left\"/></a>`;\n                const viewFragment = editor.data.processor.toView(img);\n                const modelFragment = editor.data.toModel(viewFragment);\n\n                // Change the model using the model writer.\n                const write = writer => {\n                  const screenshot = writer.createElement('screenshot');\n                  writer.append(modelFragment,screenshot);\n                  editor.model.insertContent(screenshot);\n                }\n                editor.model.change(write);\n                let selector = document.querySelector('.screenshot');\n                selector.classList.remove('screenshot');\n              }\n            })\n            .catch(error => {\n              console.error('Error:', error);\n            });\n        }\n        else {\n          const filename = \"screenshot.png\";\n          saveImageToFile(base64Image, filename);\n          selector.innerHTML = '';\n        }\n      });\n    }\n\n     const saveImageToFile = function(dataURI, filename) {\n      const link = document.createElement('a');\n      link.href = dataURI;\n      link.download = filename;\n      link.style.display = 'none';\n      document.body.appendChild(link);\n      link.click();\n      // Clean up\n      document.body.removeChild(link);\n    }\n    const drawImageOnCanvas = function(bitmap, canvas) {\n      canvas.width = bitmap.width;\n      canvas.height = bitmap.height;\n      const context = canvas.getContext('2d');\n      context.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height);\n    }\n    const handleError = function(err) {\n      console.error(Drupal.t(\"Can't access screen:\"), err);\n      // Check if the error is due to the user canceling the screen sharing prompt.\n      if (err.name === 'NotAllowedError' || err.name === 'AbortError') {\n        return;\n      }\n      alert(Drupal.t('An error occurred while trying to capture the screen. Please try again.'));\n    }\n\n    editor.ui.componentFactory.add('screenshot', buttonFactory);\n  }\n\n}\n\n\n//# sourceURL=webpack://CKEditor5.screenshot/./js/ckeditor5_plugins/screenshot/src/Screenshot.js?")},"./js/ckeditor5_plugins/screenshot/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Screenshot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Screenshot */ "./js/ckeditor5_plugins/screenshot/src/Screenshot.js");\n/**\n * @file The build process always expects an index.js file. Anything exported\n * here will be recognized by CKEditor 5 as an available plugin. Multiple\n * plugins can be exported in this one file.\n *\n * I.e. this file\'s purpose is to make plugin(s) discoverable.\n */\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ Screenshot: _Screenshot__WEBPACK_IMPORTED_MODULE_0__["default"] });\n\n\n//# sourceURL=webpack://CKEditor5.screenshot/./js/ckeditor5_plugins/screenshot/src/index.js?')},"./icons/screenshot.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"16\\" height=\\"16\\" fill=\\"currentColor\\" class=\\"bi bi-camera\\" viewBox=\\"0 0 16 16\\">\\n  <path d=\\"M15 12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h1.172a3 3 0 0 0 2.12-.879l.83-.828A1 1 0 0 1 6.827 3h2.344a1 1 0 0 1 .707.293l.828.828A3 3 0 0 0 12.828 5H14a1 1 0 0 1 1 1zM2 4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-1.172a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 9.172 2H6.828a2 2 0 0 0-1.414.586l-.828.828A2 2 0 0 1 3.172 4z\\"/>\\n  <path d=\\"M8 11a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5m0 1a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7M3 6.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0\\"/>\\n</svg>");\n\n//# sourceURL=webpack://CKEditor5.screenshot/./icons/screenshot.svg?')},"ckeditor5/src/core.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/core.js");\n\n//# sourceURL=webpack://CKEditor5.screenshot/delegated_./core.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/ui.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/ui.js");\n\n//# sourceURL=webpack://CKEditor5.screenshot/delegated_./ui.js_from_dll-reference_CKEditor5.dll?')},"dll-reference CKEditor5.dll":e=>{"use strict";e.exports=CKEditor5.dll}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](r,r.exports,__webpack_require__),r.exports}__webpack_require__.d=(e,n)=>{for(var r in n)__webpack_require__.o(n,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./js/ckeditor5_plugins/screenshot/src/index.js");return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()));